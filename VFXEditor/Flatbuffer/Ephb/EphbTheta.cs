// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace VFXEditor.Flatbuffer.Ephb
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EphbTheta : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static EphbTheta GetRootAsEphbTheta(ByteBuffer _bb) { return GetRootAsEphbTheta(_bb, new EphbTheta()); }
  public static EphbTheta GetRootAsEphbTheta(ByteBuffer _bb, EphbTheta obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EphbTheta __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool Unknown1 { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public float Unknown2 { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<VFXEditor.Flatbuffer.Ephb.EphbTheta> CreateEphbTheta(FlatBufferBuilder builder,
      bool unknown1 = false,
      float unknown2 = 0.0f) {
    builder.StartTable(2);
    EphbTheta.AddUnknown2(builder, unknown2);
    EphbTheta.AddUnknown1(builder, unknown1);
    return EphbTheta.EndEphbTheta(builder);
  }

  public static void StartEphbTheta(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddUnknown1(FlatBufferBuilder builder, bool unknown1) { builder.AddBool(0, unknown1, false); }
  public static void AddUnknown2(FlatBufferBuilder builder, float unknown2) { builder.AddFloat(1, unknown2, 0.0f); }
  public static Offset<VFXEditor.Flatbuffer.Ephb.EphbTheta> EndEphbTheta(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<VFXEditor.Flatbuffer.Ephb.EphbTheta>(o);
  }
}


static public class EphbThetaVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Unknown1*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 6 /*Unknown2*/, 4 /*float*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
